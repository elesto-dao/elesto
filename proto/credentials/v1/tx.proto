syntax = "proto3";
package elestodao.elesto.credentials.v1;

import "gogoproto/gogo.proto";
import "credentials/v1/credentials.proto";
// import "google/api/annotations.proto";

option go_package = "github.com/elesto-dao/elesto/x/credentials";

// Msg defines the identity Msg service.
service Msg {

  rpc PublishCredentialDefinition(MsgPublishCredentialDefinitionRequest) returns (MsgPublishCredentialDefinitionResponse);
  rpc UpdateCredentialDefinition(MsgUpdateCredentialDefinitionRequest) returns (MsgUpdateCredentialDefinitionResponse);

  rpc IssuePublicVerifiableCredential(MsgIssuePublicVerifiableCredentialRequest) returns (MsgIssuePublicVerifiableCredentialResponse);

}

message MsgPublishCredentialDefinitionRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  CredentialDefinition credentialDefinition = 1;
  string signer                             = 2;
}
message MsgPublishCredentialDefinitionResponse {}

message MsgUpdateCredentialDefinitionRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  bool active         = 1;
  string supersededBy = 2;
  string signer       = 3;
}
message MsgUpdateCredentialDefinitionResponse {}

message MsgIssuePublicVerifiableCredentialRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  PublicVerifiableCredential credential = 1;
  string signer                         = 2;
}
message MsgIssuePublicVerifiableCredentialResponse {}