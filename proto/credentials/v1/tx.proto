syntax = "proto3";
package elestodao.elesto.credentials.v1;

import "gogoproto/gogo.proto";
import "credentials/v1/credentials.proto";
// import "google/api/annotations.proto";

option go_package = "github.com/elesto-dao/elesto/x/credentials";

// Msg defines the identity Msg service.
service Msg {

  rpc PublishCredentialDefinition(MsgPublishCredentialDefinitionRequest) returns (MsgPublishCredentialDefinitionResponse);

  rpc RegisterCredentialIssuer(MsgRegisterCredentialIssuerRequest) returns (MsgRegisterCredentialIssuerResponse);
  rpc UpdateRevocationList(MsgUpdateRevocationListRequest) returns (MsgUpdateRevocationListResponse);

  rpc AddCredentialIssuance(MsgAddCredentialIssuanceRequest) returns (MsgAddCredentialIssuanceResponse);
  rpc RemoveCredentialIssuance(MsgRemoveCredentialIssuanceRequest) returns (MsgRemoveCredentialIssuanceResponse);

  rpc AddCredentialConstraint(MsgAddCredentialConstraintRequest) returns (MsgAddCredentialConstraintResponse);
  rpc RemoveCredentialConstraint(MsgRemoveCredentialConstraintRequest) returns (MsgRemoveCredentialConstraintResponse);

  rpc IssuePublicVerifiableCredential(MsgIssuePublicVerifiableCredentialRequest) returns (MsgIssuePublicVerifiableCredentialResponse);

}

message MsgRegisterCredentialIssuerRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  CredentialIssuer issuer = 1;
  string revocationServiceURL = 2;
  string signer = 3;
}

message MsgRegisterCredentialIssuerResponse {}

message MsgPublishCredentialDefinitionRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  CredentialDefinition credentialDefinition = 1;
  string signer = 2;
}

message MsgPublishCredentialDefinitionResponse {}

message MsgUpdateRevocationListRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string issuerDid = 1;
  RevocationList revocation = 2;
  string signer = 3;

}
message MsgUpdateRevocationListResponse {}

message MsgAddCredentialIssuanceRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string issuerDid =1;
  CredentialIssuance credentialIssuanceDefinition = 2;
  string signer = 3;
}
message MsgAddCredentialIssuanceResponse {}

message MsgRemoveCredentialIssuanceRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string issuerDid     = 1;
  string cid    = 2;
  string signer = 3;
}
message MsgRemoveCredentialIssuanceResponse {}

message MsgAddCredentialConstraintRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string issuerDid = 1;
  CredentialConstraint constraint = 2;
  string signer = 3;
}
message MsgAddCredentialConstraintResponse {}

message MsgRemoveCredentialConstraintRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string issuerDid = 1;
  string constraintId = 2;
  string signer = 3;
}
message MsgRemoveCredentialConstraintResponse {}

message MsgIssuePublicVerifiableCredentialRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  PublicVerifiableCredential credential = 1;
  string signer = 2;
}
message MsgIssuePublicVerifiableCredentialResponse {}