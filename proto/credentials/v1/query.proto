syntax = "proto3";
package elestodao.elesto.credentials.v1;

import "google/api/annotations.proto";
// import "cosmos/base/query/v1beta1/pagination.proto";
import "credentials/v1/credentials.proto";
// import "gogoproto/gogo.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/elesto-dao/elesto/x/credentials";

// this line is used by starport scaffolding # 1

// Query defines the gRPC querier service.
service Query {
  rpc CredentialIssuer(QueryCredentialIssuerRequest) returns (QueryCredentialIssuerResponse) {
    option (google.api.http).get = "/elesto/credentials/credentials/{id}";
  }

  // RevocationList fetch the revocation list for an issuer
  rpc RevocationList(QueryRevocationListRequest) returns (QueryRevocationListResponse) {
    option (google.api.http).get = "/elesto/credentials/revocation_list/{id}";
  }

  rpc PublicCredentials(QueryPublicCredentialsRequest) returns (QueryPublicCredentialsResponse) {
    option (google.api.http).get = "/elesto/credentials";
  }


}

// QueryPublicCredentialRequest is request type for Query/DidDocuments RPC method.
message QueryCredentialIssuerRequest {
  string id = 1; // id of the credential
}

// QueryCredentialIssuerResponse is response type for the Query/DidDocuments RPC method
message QueryCredentialIssuerResponse {
  // Returns a did document
  CredentialIssuer issuer = 1;
}


message QueryRevocationListRequest {
  string id = 1; // id of the credential issuer
}

message QueryRevocationListResponse {
  // Returns a did document
  RevocationList revocationList = 1;
}

message QueryPublicCredentialsRequest {}

message QueryPublicCredentialsResponse {
  repeated PublicVerifiableCredential credentials = 1;
}



// this line is used by starport scaffolding # 3
