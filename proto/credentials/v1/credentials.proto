syntax = "proto3";
package elestodao.elesto.credentials.v1;

option go_package = "github.com/elesto-dao/elesto/x/credentials";

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";


message CredentialDefinition {

  // the credential definition did
  string id = 1;

  // the did of the publisher of the credential
  string publisherId = 2;

  // the credential json-ld schema
  string schema =3;

  // the credential vocabulary
  string vocab = 4;

  // the human readable name of the credential, should be included
  // in the type of the issued credential
  string name = 5;

  // the description of the credential, such as it's purpose
  string description = 6;

  // wherever the credential is intended for public use (on-chain) or not (off-chain)
  // if the value is false then the module will forbid the issuance of the credential on chain
  bool isPublic = 7;

  // did of the credential should not be used anymore in favour of something else
  string supersededBy = 11;

  // the credential can be de-activated
  bool isActive = 12;
}



// DidMetadata defines metadata associated to a did document such as
// the status of the DID document
message PublicVerifiableCredential {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters)  = false;

  // json-ld context
  string context  = 1 [(gogoproto.jsontag) = "@context,omitempty"];

  // the credential id
  string id = 2;

  // the definition
  repeated string type = 3;

  // the
  string issuer =  4;

  // the date-time of issuance
  google.protobuf.Timestamp issuanceDate = 5 [(gogoproto.stdtime) = true];

  // the date-time of expiration
  google.protobuf.Timestamp expirationDate = 6 [(gogoproto.stdtime) = true];

  // the subject of the credential
  google.protobuf.Any credentialSubject = 7;

}


