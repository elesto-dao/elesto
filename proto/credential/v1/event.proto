syntax = "proto3";
package elestodao.elesto.credential.v1;

option go_package = "github.com/elesto-dao/elesto/v2/x/credential";

import "gogoproto/gogo.proto";

// CredentialDefinitionPublishedEvent this event gets triggered when a credential definition is published
message CredentialDefinitionPublishedEvent {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters)  = false;

  string credentialDefinitionID  = 1; // the did being created
  string publisherID = 2; // the did of the publisher of the credential definition
}

// CredentialDefinitionUpdatedEvent this event gets triggered when a definition gets updated
message CredentialDefinitionUpdatedEvent {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters)  = false;

  string credentialDefinitionID  = 1; // the did being updated
}

// PublicCredentialIssuedEvent this event gets triggered when a public verifiable credential is issued on-chain
message PublicCredentialIssuedEvent {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters)  = false;

  string credentialDefinitionID = 1;
  string credentialID           = 2;
  string issuerID               = 3;
}



